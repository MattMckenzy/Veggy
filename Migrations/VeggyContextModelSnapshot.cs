// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Veggy.Models;

#nullable disable

namespace Veggy.Migrations
{
    [DbContext(typeof(VeggyContext))]
    partial class VeggyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Veggy.Models.Lemmy.Community", b =>
                {
                    b.Property<string>("OriginUrl")
                        .HasColumnType("text");

                    b.Property<string>("BannerUrl")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "banner");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<string>("IconUrl")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "icon");

                    b.Property<int?>("Id")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<bool>("IsNSFW")
                        .HasColumnType("boolean")
                        .HasAnnotation("Relational:JsonPropertyName", "nsfw");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<int?>("PostFetchCount")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.HasKey("OriginUrl");

                    b.ToTable("Communities");
                });

            modelBuilder.Entity("Veggy.Models.Lemmy.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "username_or_email");

                    b.Property<string>("BearerToken")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "jwt");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "password");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Veggy.Models.Setting", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Settings");
                });
#pragma warning restore 612, 618
        }
    }
}
